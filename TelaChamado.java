/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import src.Chamado;


/**
 *
 * @author Vini
 */
public class TelaChamado extends javax.swing.JFrame {
    private int chamadoId = 0;
    private int idChamadoSelecionado;
    ArrayList<Chamado> chamados = new ArrayList<Chamado>();
    /**
     * Creates new form telaCliente
     */
    public TelaChamado() {
        initComponents();
        
        this.btnSalvar.setEnabled(false);
        this.btnAlterar.setEnabled(false);
        this.btnExcluir.setEnabled(false);
        
        setLocationRelativeTo(null);
    }
    
    
    private void UpdateTable() {
        DefaultTableModel model = (DefaultTableModel) this.jtblTable.getModel();
        
        for(int i = 0; i < model.getRowCount(); i++) {
            model.removeRow(i);
        }
        
        for(int i = 0; i < chamados.size(); i++) {
            Object[] row = new Object[9];
            
            row[0] = chamados.get(i).getId();        
            row[1] = chamados.get(i).getData();
            row[2] = chamados.get(i).getTipo();
            row[3] = chamados.get(i).getOrigem();
            row[4] = chamados.get(i).getDestino(); 
            row[5] = chamados.get(i).getHorarioPartida();
            row[6] = chamados.get(i).getHorarioRetorno();
            row[7] = chamados.get(i).getQuilometragemInicial();
            row[8] = chamados.get(i).getQuilometragemFinal();
            row[9] = chamados.get(i).getValorTotal();
            
            model.addRow(row);
        }
        
        this.jtblTable.setModel(model);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnlCadastro = new javax.swing.JPanel();
        lblData = new javax.swing.JLabel();
        ftxtfData = new javax.swing.JFormattedTextField();
        lblTipo = new javax.swing.JLabel();
        txtfTipo = new javax.swing.JTextField();
        lblOrigem = new javax.swing.JLabel();
        txtfOrigem = new javax.swing.JTextField();
        lblDestino = new javax.swing.JLabel();
        txtfDestino = new javax.swing.JTextField();
        lblHorarioPartida = new javax.swing.JLabel();
        txtfHorarioPartida = new javax.swing.JTextField();
        lblHorarioRetorno = new javax.swing.JLabel();
        txtfHorarioRetorno = new javax.swing.JTextField();
        lblQuilometragemInicial = new javax.swing.JLabel();
        txtfQuilometragemInicial = new javax.swing.JTextField();
        lblQuilometragemFinal = new javax.swing.JLabel();
        txtfQuilometragemFinal = new javax.swing.JTextField();
        lblValorFinal = new javax.swing.JLabel();
        ftxtfValorTotal = new javax.swing.JFormattedTextField();
        jpnlButtons = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        txtfPesquisar = new javax.swing.JTextField();
        lblPesquisar = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        jspTable = new javax.swing.JScrollPane();
        jtblTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpnlCadastro.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro"));

        lblData.setText("Data:");

        ftxtfData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        ftxtfData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtfDataActionPerformed(evt);
            }
        });
        ftxtfData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ftxtfDataKeyTyped(evt);
            }
        });

        lblTipo.setText("Tipo");

        txtfTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfTipoActionPerformed(evt);
            }
        });
        txtfTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTipoKeyTyped(evt);
            }
        });

        lblOrigem.setText("Origem");

        txtfOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfOrigemActionPerformed(evt);
            }
        });
        txtfOrigem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfOrigemKeyTyped(evt);
            }
        });

        lblDestino.setText("Destino:");

        txtfDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfDestinoActionPerformed(evt);
            }
        });
        txtfDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfDestinoKeyTyped(evt);
            }
        });

        lblHorarioPartida.setText("Horario de partida:");

        txtfHorarioPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfHorarioPartidaActionPerformed(evt);
            }
        });
        txtfHorarioPartida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfHorarioPartidaKeyTyped(evt);
            }
        });

        lblHorarioRetorno.setText("Horario de retorno:");

        txtfHorarioRetorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfHorarioRetornoActionPerformed(evt);
            }
        });
        txtfHorarioRetorno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfHorarioRetornoKeyTyped(evt);
            }
        });

        lblQuilometragemInicial.setText("Quilometragem Inicial:");

        txtfQuilometragemInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfQuilometragemInicialActionPerformed(evt);
            }
        });
        txtfQuilometragemInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfQuilometragemInicialKeyTyped(evt);
            }
        });

        lblQuilometragemFinal.setText("Quilometragem Final:");

        txtfQuilometragemFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfQuilometragemFinalActionPerformed(evt);
            }
        });
        txtfQuilometragemFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfQuilometragemFinalKeyTyped(evt);
            }
        });

        lblValorFinal.setText("Valor Total:");

        ftxtfValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        ftxtfValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtfValorTotalActionPerformed(evt);
            }
        });
        ftxtfValorTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ftxtfValorTotalKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jpnlCadastroLayout = new javax.swing.GroupLayout(jpnlCadastro);
        jpnlCadastro.setLayout(jpnlCadastroLayout);
        jpnlCadastroLayout.setHorizontalGroup(
            jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblData)
                    .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtfHorarioPartida, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtfTipo, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblDestino, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtfDestino, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addComponent(lblHorarioPartida, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtfHorarioRetorno, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ftxtfData, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(lblHorarioRetorno)))
                    .addComponent(lblOrigem)
                    .addComponent(lblTipo)
                    .addComponent(txtfOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuilometragemInicial)
                    .addComponent(lblQuilometragemFinal)
                    .addComponent(lblValorFinal)
                    .addComponent(ftxtfValorTotal)
                    .addComponent(txtfQuilometragemInicial)
                    .addComponent(txtfQuilometragemFinal, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addGap(149, 149, 149))
        );
        jpnlCadastroLayout.setVerticalGroup(
            jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlCadastroLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuilometragemInicial)
                    .addComponent(lblData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfQuilometragemInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipo)
                    .addComponent(lblQuilometragemFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfQuilometragemFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrigem)
                    .addComponent(lblValorFinal, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDestino)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHorarioPartida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfHorarioPartida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHorarioRetorno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfHorarioRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        txtfPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfPesquisarActionPerformed(evt);
            }
        });

        lblPesquisar.setText("Pesquisar pela Data:");

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlButtonsLayout = new javax.swing.GroupLayout(jpnlButtons);
        jpnlButtons.setLayout(jpnlButtonsLayout);
        jpnlButtonsLayout.setHorizontalGroup(
            jpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlButtonsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addGap(18, 18, 18)
                .addComponent(btnAlterar)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPesquisar))
                .addGap(15, 15, 15))
        );
        jpnlButtonsLayout.setVerticalGroup(
            jpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlButtonsLayout.createSequentialGroup()
                .addGroup(jpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlButtonsLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpnlButtonsLayout.createSequentialGroup()
                        .addGroup(jpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnlButtonsLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(jpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnSalvar)
                                    .addComponent(btnCancelar)
                                    .addComponent(btnAlterar)
                                    .addComponent(btnExcluir))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlButtonsLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPesquisar)
                                .addGap(18, 18, 18)))
                        .addComponent(txtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Rg", "CPF", "Nome", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblTableMouseClicked(evt);
            }
        });
        jspTable.setViewportView(jtblTable);
        if (jtblTable.getColumnModel().getColumnCount() > 0) {
            jtblTable.getColumnModel().getColumn(0).setResizable(false);
            jtblTable.getColumnModel().getColumn(1).setResizable(false);
            jtblTable.getColumnModel().getColumn(2).setResizable(false);
            jtblTable.getColumnModel().getColumn(3).setResizable(false);
            jtblTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspTable)
                    .addComponent(jpnlButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnlCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspTable, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
	chamadoId++;
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();
        
        float horarioPartidaCerto = Float.parseFloat(horarioPartida);
        float horarioRetornoCerto = Float.parseFloat(horarioRetorno);
        
        double quilometragemInicialCerto = Double.parseDouble(quilometragemInicial);
        double quilometragemFinalCerto = Double.parseDouble(quilometragemFinal);
        double valorTotalCerto = Double.parseDouble(valorTotal);

	Chamado chamado = new Chamado(chamadoId, data, tipo, origem, destino, horarioPartidaCerto, horarioRetornoCerto, quilometragemInicialCerto, quilometragemFinalCerto, valorTotalCerto);

	chamados.add(chamado);

	UpdateTable();

	ftxtfData.setText("");
	txtfTipo.setText("");
	txtfOrigem.setText("");
	txtfDestino.setText("");
	txtfHorarioPartida.setText("");
	txtfHorarioRetorno.setText("");
	txtfQuilometragemInicial.setText("");
	txtfQuilometragemFinal.setText("");
	ftxtfValorTotal.setText("");
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtfPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPesquisarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void ftxtfDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtfDataActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_ftxtfDataActionPerformed

    private void txtfDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfDestinoActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfDestinoActionPerformed

    private void txtfOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfOrigemActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();
	
	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfOrigemActionPerformed

    private void txtfHorarioRetornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfHorarioRetornoActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfHorarioRetornoActionPerformed

    private void txtfHorarioPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfHorarioPartidaActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfHorarioPartidaActionPerformed

    private void txtfQuilometragemInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfQuilometragemInicialActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfQuilometragemInicialActionPerformed

    private void txtfTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfTipoActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfTipoActionPerformed

    private void txtfQuilometragemFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfQuilometragemFinalActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfQuilometragemFinalActionPerformed

    private void ftxtfValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtfValorTotalActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_ftxtfValorTotalActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
	ftxtfData.setText("");
	txtfTipo.setText("");
	txtfOrigem.setText("");
	txtfDestino.setText("");
	txtfHorarioPartida.setText("");
	txtfHorarioRetorno.setText("");
	txtfQuilometragemInicial.setText("");
	txtfQuilometragemFinal.setText("");
	ftxtfValorTotal.setText("");

	btnSalvar.setEnabled(false);
	btnAlterar.setEnabled(false);
	btnExcluir.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void ftxtfDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftxtfDataKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_ftxtfDataKeyTyped

    private void txtfTipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTipoKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfTipoKeyTyped

    private void txtfOrigemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfOrigemKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfOrigemKeyTyped

    private void txtfDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDestinoKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfDestinoKeyTyped

    private void txtfHorarioPartidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfHorarioPartidaKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfHorarioPartidaKeyTyped

    private void txtfHorarioRetornoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfHorarioRetornoKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfHorarioRetornoKeyTyped

    private void txtfQuilometragemInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfQuilometragemInicialKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfQuilometragemInicialKeyTyped

    private void txtfQuilometragemFinalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfQuilometragemFinalKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_txtfQuilometragemFinalKeyTyped

    private void ftxtfValorTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftxtfValorTotalKeyTyped
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	if(data.length() > 0 &&
	   tipo.length() > 0 &&
	   origem.length() > 0 &&
	   destino.length() > 0 &&
	   horarioPartida.length() > 0 &&
	   horarioRetorno.length() > 0 &&
	   quilometragemInicial.length() > 0 &&
	   quilometragemFinal.length() > 0 &&
	   valorTotal.length() > 0 &&
	   !btnAlterar.isEnabled()) {
	  btnSalvar.setEnabled(true);
	} else {
          btnSalvar.setEnabled(false);
	}
    }//GEN-LAST:event_ftxtfValorTotalKeyTyped

    private void jtblTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblTableMouseClicked
        // TODO add your handling code here:
	int index = jtblTable.getSelectedRow();

	if(index < 0 || index >= chamados.size()) return;

	Chamado chamado = chamados.get(index);


	ftxtfData.setText(chamado.getData());
	txtfTipo.setText(chamado.getTipo());
	txtfOrigem.setText(chamado.getOrigem());
	txtfDestino.setText(chamado.getDestino());
	txtfHorarioPartida.setText(chamado.getHorarioPartida());
	txtfHorarioRetorno.setText(chamado.getHorarioRetorno());
	txtfQuilometragemInicial.setText(chamado.getQuilometragemInicial());
	txtfQuilometragemFinal.setText(chamado.getQuilometragemFinal());
	ftxtfValorTotal.setText(chamado.getValorTotal);

	idChamadoSelecionado = index + 1;

	btnSalvar.setEnabled(false);
	btnAlterar.setEnabled(true);
	btnExcluir.setEnabled(true);
    }//GEN-LAST:event_jtblTableMouseClicked

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
	String data = ftxtfData.getText();
	String tipo = txtfTipo.getText();
	String origem = txtfOrigem.getText();
	String destino = txtfDestino.getText();
	String horarioPartida = txtfHorarioPartida.getText();
	String horarioRetorno = txtfHorarioRetorno.getText();
	String quilometragemInicial = txtfQuilometragemInicial.getText();
	String quilometragemFinal = txtfQuilometragemFinal.getText();
	String valorTotal = ftxtfValorTotal.getText();

	Chamado chamado = chamados.get(idChamadoSelecionado - 1);

	chamado.setData(data);
	chamado.setTipo(tipo);
	chamado.setOritem(origem);
	chamado.setDestino(destino);
	chamado.setHorarioPartida(horarioPartida);
	chamado.setHorarioRetorno(horarioRetorno);
	chamado.setQuilometragemInicial(quilometragemInicial);
	chamado.setQuilometragemFinal(quilometragemFinal);
	chamado.setValorTotal(valorTotal);

	UpdateTable();

	ftxtfData.setText("");
	txtfTipo.setText("");
	txtfOrigem.setText("");
	txtfDestino.setText("");
	txtfHorarioPartida.setText("");
	txtfHorarioRetorno.setText("");
	txtfQuilometragemInicial.setText("");
	txtfQuilometragemFinal.setText("");
	ftxtfValorTotal.setText("");

	btnAlterar.setEnabled(false);
	btnExcluir.setEnabled(false);
	btnCancelar.setEnabled(true);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
	chamados.remove(idChamadoSelecionado - 1);

	ftxtfData.setText("");
	txtfTipo.setText("");
	txtfOrigem.setText("");
	txtfDestino.setText("");
	txtfHorarioPartida.setText("");
	txtfHorarioRetorno.setText("");
	txtfQuilometragemInicial.setText("");
	txtfQuilometragemFinal.setText("");
	ftxtfValorTotal.setText("");

	UpdateTable();

	btnAlterar.setEnabled(false);
	btnExcluir.setEnabled(false);
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaChamado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaChamado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaChamado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaChamado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaChamado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JFormattedTextField ftxtfData;
    private javax.swing.JFormattedTextField ftxtfValorTotal;
    private javax.swing.JPanel jpnlButtons;
    private javax.swing.JPanel jpnlCadastro;
    private javax.swing.JScrollPane jspTable;
    private javax.swing.JTable jtblTable;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDestino;
    private javax.swing.JLabel lblHorarioPartida;
    private javax.swing.JLabel lblHorarioRetorno;
    private javax.swing.JLabel lblOrigem;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel lblQuilometragemFinal;
    private javax.swing.JLabel lblQuilometragemInicial;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblValorFinal;
    private javax.swing.JTextField txtfDestino;
    private javax.swing.JTextField txtfHorarioPartida;
    private javax.swing.JTextField txtfHorarioRetorno;
    private javax.swing.JTextField txtfOrigem;
    private javax.swing.JTextField txtfPesquisar;
    private javax.swing.JTextField txtfQuilometragemFinal;
    private javax.swing.JTextField txtfQuilometragemInicial;
    private javax.swing.JTextField txtfTipo;
    // End of variables declaration//GEN-END:variables
}
